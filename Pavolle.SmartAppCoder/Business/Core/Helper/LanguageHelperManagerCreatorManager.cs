using Pavolle.SmartAppCoder.Common.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Pavolle.SmartAppCoder.Business.Core.Helper
{
    public class LanguageHelperManagerCreatorManager : Singleton<LanguageHelperManagerCreatorManager>
    {
        private LanguageHelperManagerCreatorManager() { }

        public bool Create(string projectPath, string organizationName)
        {
            string classString = "";
            classString += "using " + organizationName + ".Core.Enums;" + Environment.NewLine;
            classString += "using " + organizationName + ".Core.Utils;" + Environment.NewLine;
            classString += "using " + organizationName + ".Core.ViewModels.Model;" + Environment.NewLine;
            classString += "using " + organizationName + ".Core.ViewModels.Response;" + Environment.NewLine;
            classString += "using " + organizationName + ".Core.ViewModels.ViewData;" + Environment.NewLine;
            classString += "using System.Globalization;" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "namespace " + organizationName + ".Core.Helper" + Environment.NewLine;
            classString += "{" + Environment.NewLine;
            classString += "    public class LanguageHelperManager : Singleton<LanguageHelperManager>" + Environment.NewLine;
            classString += "    {" + Environment.NewLine;
            classString += "        List<LanguageNameModel> _languageNames;" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "        private LanguageHelperManager() " + Environment.NewLine;
            classString += "        {" + Environment.NewLine;
            classString += "            _languageNames = new List<LanguageNameModel>()" + Environment.NewLine;
            classString += "            {" + Environment.NewLine;
            classString += "                new LanguageNameModel" + Environment.NewLine;
            classString += "                {" + Environment.NewLine;
            classString += "                    Language=ELanguage.English," + Environment.NewLine;
            classString += "                    English=\"English\"," + Environment.NewLine;
            classString += "                    German=\"German\"," + Environment.NewLine;
            classString += "                    Spanish=\"Spanish\"," + Environment.NewLine;
            classString += "                    French=\"French\"," + Environment.NewLine;
            classString += "                    Russian=\"Russian\"," + Environment.NewLine;
            classString += "                    Turkish=\"Turkish\"," + Environment.NewLine;
            classString += "                    Azerbaijani=\"Azerbaijani\"" + Environment.NewLine;
            classString += "                }," + Environment.NewLine;
            classString += "                new LanguageNameModel" + Environment.NewLine;
            classString += "                {" + Environment.NewLine;
            classString += "                    Language=ELanguage.Turkish," + Environment.NewLine;
            classString += "                    English=\"İnglizce\"," + Environment.NewLine;
            classString += "                    German=\"Almanca\"," + Environment.NewLine;
            classString += "                    Spanish=\"İspanyolca\"," + Environment.NewLine;
            classString += "                    French=\"Fransızca\"," + Environment.NewLine;
            classString += "                    Russian=\"Rusça\"," + Environment.NewLine;
            classString += "                    Turkish=\"Türkçe\"," + Environment.NewLine;
            classString += "                    Azerbaijani=\"Azerice\"" + Environment.NewLine;
            classString += "                }" + Environment.NewLine;
            classString += "            };" + Environment.NewLine;
            classString += "        }" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "        public string GetTwoLetterISOLanguageNameFromCulureInfo()" + Environment.NewLine;
            classString += "        {" + Environment.NewLine;
            classString += "            return CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;" + Environment.NewLine;
            classString += "        }" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "        public LanguageModel GetCurrentCultureLanguage()" + Environment.NewLine;
            classString += "        {" + Environment.NewLine;
            classString += "            string languageCode = GetTwoLetterISOLanguageNameFromCulureInfo();" + Environment.NewLine;
            classString += "            switch (languageCode)" + Environment.NewLine;
            classString += "            {" + Environment.NewLine;
            classString += "                case \"tr\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.Turkish, Name=\"Turkish\"};" + Environment.NewLine;
            classString += "                case \"az\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.Azerbaijani, Name=\"Azerbaijani\"};" + Environment.NewLine;
            classString += "                case \"en\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.English, Name=\"English\"};" + Environment.NewLine;
            classString += "                case \"fr\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.French, Name=\"French\"};" + Environment.NewLine;
            classString += "                case \"ru\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.Russian, Name=\"Russian\"};" + Environment.NewLine;
            classString += "                case \"de\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.German, Name=\"German\"};" + Environment.NewLine;
            classString += "                case \"es\":" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.Spanish, Name=\"Spanish\"};" + Environment.NewLine;
            classString += "                default:" + Environment.NewLine;
            classString += "                    return new LanguageModel{ Code = ELanguage.English, Name=\"English\"};" + Environment.NewLine;
            classString += "            }" + Environment.NewLine;
            classString += "        }" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "        public void Intialize(List<ELanguage> languages)" + Environment.NewLine;
            classString += "        {" + Environment.NewLine;
            classString += "            _languageNames = new List<LanguageNameModel>();" + Environment.NewLine;
            classString += "            foreach (var language in languages)" + Environment.NewLine;
            classString += "            {" + Environment.NewLine;
            classString += "                switch (language)" + Environment.NewLine;
            classString += "                {" + Environment.NewLine;
            classString += "                    case ELanguage.English:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.English," + Environment.NewLine;
            classString += "                            English = \"English\"," + Environment.NewLine;
            classString += "                            German = \"German\"," + Environment.NewLine;
            classString += "                            Spanish = \"Spanish\"," + Environment.NewLine;
            classString += "                            French = \"French\"," + Environment.NewLine;
            classString += "                            Russian = \"Russian\"," + Environment.NewLine;
            classString += "                            Turkish = \"Turkish\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Azerbaijani\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.German:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.German," + Environment.NewLine;
            classString += "                            English = \"Englisch\"," + Environment.NewLine;
            classString += "                            German = \"Deutsch\"," + Environment.NewLine;
            classString += "                            Spanish = \"Spanisch\"," + Environment.NewLine;
            classString += "                            French = \"Französisch\"," + Environment.NewLine;
            classString += "                            Russian = \"Russisch\"," + Environment.NewLine;
            classString += "                            Turkish = \"Türkisch\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Aserbaidschanisch\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.Spanish:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.Spanish," + Environment.NewLine;
            classString += "                            English = \"English\"," + Environment.NewLine;
            classString += "                            German = \"German\"," + Environment.NewLine;
            classString += "                            Spanish = \"Spanish\"," + Environment.NewLine;
            classString += "                            French = \"French\"," + Environment.NewLine;
            classString += "                            Russian = \"Russian\"," + Environment.NewLine;
            classString += "                            Turkish = \"Turkish\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Azerbaijani\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.French:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.French," + Environment.NewLine;
            classString += "                            English = \"English\"," + Environment.NewLine;
            classString += "                            German = \"German\"," + Environment.NewLine;
            classString += "                            Spanish = \"Spanish\"," + Environment.NewLine;
            classString += "                            French = \"French\"," + Environment.NewLine;
            classString += "                            Russian = \"Russian\"," + Environment.NewLine;
            classString += "                            Turkish = \"Turkish\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Azerbaijani\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.Russian:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.Russian," + Environment.NewLine;
            classString += "                            English = \"Английский\"," + Environment.NewLine;
            classString += "                            German = \"Немецкий\"," + Environment.NewLine;
            classString += "                            Spanish = \"Испанский\"," + Environment.NewLine;
            classString += "                            French = \"Французский\"," + Environment.NewLine;
            classString += "                            Russian = \"Русский\"," + Environment.NewLine;
            classString += "                            Turkish = \"Турецкий\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Aзербайджанский\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.Turkish:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.Turkish," + Environment.NewLine;
            classString += "                            English = \"İnglizce\"," + Environment.NewLine;
            classString += "                            German = \"Almanca\"," + Environment.NewLine;
            classString += "                            Spanish = \"İspanyolca\"," + Environment.NewLine;
            classString += "                            French = \"Fransızca\"," + Environment.NewLine;
            classString += "                            Russian = \"Rusça\"," + Environment.NewLine;
            classString += "                            Turkish = \"Türkçe\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Azerice\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    case ELanguage.Azerbaijani:" + Environment.NewLine;
            classString += "                        _languageNames.Add(new LanguageNameModel" + Environment.NewLine;
            classString += "                        {" + Environment.NewLine;
            classString += "                            Language = ELanguage.Azerbaijani," + Environment.NewLine;
            classString += "                            English = \"İnglizcə\"," + Environment.NewLine;
            classString += "                            German = \"Almanca\"," + Environment.NewLine;
            classString += "                            Spanish = \"İspanca\"," + Environment.NewLine;
            classString += "                            French = \"Fransızca\"," + Environment.NewLine;
            classString += "                            Russian = \"Rusca\"," + Environment.NewLine;
            classString += "                            Turkish = \"Türkcə\"," + Environment.NewLine;
            classString += "                            Azerbaijani = \"Azərbaycanca\"" + Environment.NewLine;
            classString += "                        });" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                    default:" + Environment.NewLine;
            classString += "                        break;" + Environment.NewLine;
            classString += "                }" + Environment.NewLine;
            classString += "            }" + Environment.NewLine;
            classString += "        }" + Environment.NewLine;
            classString += "" + Environment.NewLine;
            classString += "        public LookupResponse LanguageLookupList(ELanguage language)" + Environment.NewLine;
            classString += "        {" + Environment.NewLine;
            classString += "            var response = new LookupResponse { DataList = new List<LookupViewData> { } };" + Environment.NewLine;
            classString += "            switch (language)" + Environment.NewLine;
            classString += "            {" + Environment.NewLine;
            classString += "                case ELanguage.English:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.English" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.German:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.German" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.Spanish:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.Spanish" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.French:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.French" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.Russian:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.Russian" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.Turkish:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.Turkish" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                case ELanguage.Azerbaijani:" + Environment.NewLine;
            classString += "                    response.DataList = _languageNames.Select(t => new LookupViewData" + Environment.NewLine;
            classString += "                    {" + Environment.NewLine;
            classString += "                        IsDefault = true," + Environment.NewLine;
            classString += "                        Key = (int)t.Language," + Environment.NewLine;
            classString += "                        Value = t.Azerbaijani" + Environment.NewLine;
            classString += "                    }).ToList();" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "                default:" + Environment.NewLine;
            classString += "                    break;" + Environment.NewLine;
            classString += "            }" + Environment.NewLine;
            classString += "            return response;" + Environment.NewLine;
            classString += "        }" + Environment.NewLine;
            classString += "    }" + Environment.NewLine;
            classString += "}" + Environment.NewLine;

            return FileHelperManager.Instance.WriteFile(projectPath + "\\" + organizationName + ".Core", "Helper", "LanguageHelperManager.cs", classString);

        }
    }
}

